# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestCreazionediuneventoprivato():
    def setup_method(self, method):
        self.driver = webdriver.Chrome()
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def wait_for_window(self, timeout=2):
        time.sleep(round(timeout / 1000))
        wh_now = self.driver.window_handles
        wh_then = self.vars["window_handles"]
        if len(wh_now) > len(wh_then):
            return set(wh_now).difference(set(wh_then)).pop()

    def test_creazionediuneventoprivato(self):
        self.driver.get("http://127.0.0.1:5000/home_organizzatore")
        self.driver.set_window_size(637, 785)
        self.driver.find_element(By.NAME, "email").send_keys("asd@email.com")
        self.driver.find_element(By.NAME, "password").send_keys("Ciao.123")
        self.driver.find_element(By.CSS_SELECTOR, ".left .movimentoH1").click()
        self.driver.find_element(By.NAME, "email").send_keys("asd@email.com")
        self.driver.find_element(By.NAME, "password").send_keys("Ciao.123")
        self.driver.find_element(By.ID, "tipo_evento").click()
        dropdown = self.driver.find_element(By.ID, "tipo_evento")
        dropdown.find_element(By.XPATH, "//option[. = 'Compleanno']").click()
        self.driver.find_element(By.ID, "data-evento").click()
        self.driver.find_element(By.ID, "data-evento").send_keys("2024-02-01")
        self.driver.find_element(By.ID, "data-evento").click()
        self.driver.find_element(By.ID, "data-evento").click()
        self.driver.find_element(By.ID, "data-evento").send_keys("2024-05-17")
        self.driver.find_element(By.ID, "n_invitati").click()
        self.driver.find_element(By.ID, "n_invitati").send_keys("100")
        self.driver.find_element(By.CSS_SELECTOR, ".button").click()
        self.driver.find_element(By.NAME, "email").send_keys("asd@email.com")
        self.driver.find_element(By.NAME, "password").send_keys("Ciao.123")
        self.driver.find_element(By.CSS_SELECTOR, "#trossi\\@gmail\\.com > a").click()
        self.driver.find_element(By.LINK_TEXT, "Prenota").click()
        assert self.driver.switch_to.alert.text == "\"Servizio aggiunto al carrello\""
        self.driver.find_element(By.CSS_SELECTOR, "#lbianchi\\@gmail\\.com > a").click()
        self.driver.find_element(By.LINK_TEXT, "Prenota").click()
        assert self.driver.switch_to.alert.text == "\"Servizio aggiunto al carrello\""
        self.driver.find_element(By.CSS_SELECTOR, "#forni\\@email\\.com > a").click()
        self.vars["window_handles"] = self.driver.window_handles
        self.driver.find_element(By.CSS_SELECTOR, ".IconContainer").click()
        self.vars["win5273"] = self.wait_for_window(2000)
        self.driver.switch_to.window(self.vars["win5273"])
        self.driver.find_element(By.NAME, "email").send_keys("asd@email.com")
        self.driver.find_element(By.NAME, "password").send_keys("Ciao.123")
        self.driver.find_element(By.NAME, "descrizione").click()
        self.driver.find_element(By.NAME, "descrizione").send_keys("Compleanno di Tonino")
        self.driver.find_element(By.NAME, "nome_festeggiato").click()
        self.driver.find_element(By.NAME, "nome_festeggiato").send_keys("Antonio")
        self.driver.find_element(By.CSS_SELECTOR, ".text").click()
        self.driver.find_element(By.NAME, "email").send_keys("asd@email.com")
        self.driver.find_element(By.NAME, "password").send_keys("Ciao.123")
