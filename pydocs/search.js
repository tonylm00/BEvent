window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "BEvent_app", "modulename": "BEvent_app", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.create_app", "modulename": "BEvent_app", "qualname": "create_app", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Autenticazione", "modulename": "BEvent_app.Autenticazione", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneController", "modulename": "BEvent_app.Autenticazione.AutenticazioneController", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneController.aut", "modulename": "BEvent_app.Autenticazione.AutenticazioneController", "qualname": "aut", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;aut&#x27;&gt;"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneController.login", "modulename": "BEvent_app.Autenticazione.AutenticazioneController", "qualname": "login", "kind": "function", "doc": "<p>Gestice il processo di login</p>\n\n<ul>\n<li>verifica le credenziali dell'utente</li>\n<li>se le credenziali sono valide, effettua il login e reindirizza l'utente alla pagina appropriata in base al ruolo</li>\n<li>se le credenziali non sono valide, reindirizza l'utente alla home page\nReturns: una risposta appropriata in base al risultato del login</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneController.logout", "modulename": "BEvent_app.Autenticazione.AutenticazioneController", "qualname": "logout", "kind": "function", "doc": "<p>Gestisce il proceso di logout</p>\n\n<ul>\n<li>rimuove le informazioni di sessione relative al nome utente, ruolo e regione</li>\n<li>effettua il logout dell'utente</li>\n<li>reindirizza l'utente alla home page\nReturns: reindirizza l'utente alla home page dopo il logout</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneController.registrazione_organizzatore", "modulename": "BEvent_app.Autenticazione.AutenticazioneController", "qualname": "registrazione_organizzatore", "kind": "function", "doc": "<p>Gestice il processo di registrazione di un utente nel sistema</p>\n\n<ul>\n<li>ottiene i dati dal form di registrazione</li>\n<li>in base al ruolo specificato nel form, chiama il servizio di autenticazione per registrare l'utente</li>\n<li>se la registrazione ha successo, effettua il login dell'utente e reindirizza alla pagina appropriata</li>\n<li>se la registrazione fallisce, mostra un messaggio di errore\nReturns: reindirizza l'utente alla pagina appropriata dopo la registrazione</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneController.area_organizzatore", "modulename": "BEvent_app.Autenticazione.AutenticazioneController", "qualname": "area_organizzatore", "kind": "function", "doc": "<p>Restituisce la pagina dell'area dell'organizzatore con i dati relativi, agli eventi privati e ai biglietti comprati</p>\n\n<ul>\n<li>ottiene l'id dell'organizzatore della sessione</li>\n<li>richiama la funzione 'get_dati_area_organizzatore' per ottenere i dati necessari</li>\n<li>restituisce la pagina dell'area dell'organizzatore con i dati ottenuti\nReturns: pagina dell'area dell'organizzatore con i deti relativi</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneController.home_organizzatore", "modulename": "BEvent_app.Autenticazione.AutenticazioneController", "qualname": "home_organizzatore", "kind": "function", "doc": "<p>Restituisce la pagina home dell'organizzatore con i dati relativi all'evento privato e agli eventi pubblici futuri</p>\n\n<ul>\n<li>ottiene l'id dell'organizzatore della sessione</li>\n<li>richiama la funzione 'get_dati_home_organizzatore' per ottenere i dati necessari</li>\n<li>restituisce la pagina home dell'organizzatore con i relativi dati\nReturns: pagina home dell'organizzatore con i dati relativi</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneService", "modulename": "BEvent_app.Autenticazione.AutenticazioneService", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneService.db", "modulename": "BEvent_app.Autenticazione.AutenticazioneService", "qualname": "db", "kind": "variable", "doc": "<p></p>\n", "default_value": "Database(MongoClient(host=[&#x27;localhost:27017&#x27;], document_class=dict, tz_aware=False, connect=True), &#x27;BEvent&#x27;)"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneService.verify_user", "modulename": "BEvent_app.Autenticazione.AutenticazioneService", "qualname": "verify_user", "kind": "function", "doc": "<p>verifica l'email e la password forniti dall'utente nel sistema\nParameters:\n    email(str):email da verificare.\n    password(str):password da verificare\nReturn:\n    restituisce un'istanza dell'utente se la verifica ha successo, altrimenti None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">email</span>, </span><span class=\"param\"><span class=\"n\">password</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneService.email_valida", "modulename": "BEvent_app.Autenticazione.AutenticazioneService", "qualname": "email_valida", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Z|a-z]{2,}\\\\b&#x27;"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneService.spec", "modulename": "BEvent_app.Autenticazione.AutenticazioneService", "qualname": "spec", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;$&#x27;, &#x27;#&#x27;, &#x27;@&#x27;, &#x27;!&#x27;, &#x27;*&#x27;, &#x27;\u00a3&#x27;, &#x27;%&#x27;, &#x27;&amp;&#x27;, &#x27;/&#x27;, &#x27;(&#x27;, &#x27;)&#x27;, &#x27;=&#x27;, &#x27;|&#x27;, &#x27;+&#x27;, &#x27;-&#x27;, &#x27;^&#x27;, &#x27;_&#x27;, &#x27;-&#x27;, &#x27;?&#x27;, &#x27;,&#x27;, &#x27;:&#x27;, &#x27;;&#x27;, &#x27;.&#x27;, &#x27;\u00a7&#x27;, &#x27;\u00b0&#x27;, &#x27;[&#x27;, &#x27;]&#x27;]"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneService.controlla_campi", "modulename": "BEvent_app.Autenticazione.AutenticazioneService", "qualname": "controlla_campi", "kind": "function", "doc": "<p>controlla la validit\u00e0 dei campi utente e segna eventuali errori utilizzando flash</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>nome</strong>:  (str) Nome dell'utente</li>\n<li><strong>cognome</strong>:  (str) Cognome dell'utente</li>\n<li><strong>telefono</strong>: (str) Numero di telefono dell'utente</li>\n<li><strong>nome_utente</strong>:  (str) Nome utente dell'utente</li>\n<li><strong>email</strong>:  (str) indirizzo email dell'utente</li>\n<li><strong>data_di_nascita</strong>:  (str) data di nascita dell'utente con il formato anno-mese-giorno</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True se tuttii i campi sono validi, altrimenti restituisce None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nome</span>, </span><span class=\"param\"><span class=\"n\">cognome</span>, </span><span class=\"param\"><span class=\"n\">telefono</span>, </span><span class=\"param\"><span class=\"n\">nome_utente</span>, </span><span class=\"param\"><span class=\"n\">email</span>, </span><span class=\"param\"><span class=\"n\">data_di_nascita</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneService.is_valid_piva", "modulename": "BEvent_app.Autenticazione.AutenticazioneService", "qualname": "is_valid_piva", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">piva</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneService.is_valid_email", "modulename": "BEvent_app.Autenticazione.AutenticazioneService", "qualname": "is_valid_email", "kind": "function", "doc": "<p>verifica se un indirizzo email \u00e8 valido o no</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>email</strong>:  (str) indirizzo email da verificare</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>restituisce True se l'indirizzo email \u00e8 valido, altrimenti restituisce False</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">email</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneService.is_valid_data_di_nascita", "modulename": "BEvent_app.Autenticazione.AutenticazioneService", "qualname": "is_valid_data_di_nascita", "kind": "function", "doc": "<p>verifica se la data di nascita inserita dall'utente \u00e8 valida o no</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong>:  (str) data di nascita nel normato anno-mese-giorno</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>restituisce True se la data di nascita \u00e8 valida e precede la data odierna, altrimenti restituisce False</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneService.controlla_password", "modulename": "BEvent_app.Autenticazione.AutenticazioneService", "qualname": "controlla_password", "kind": "function", "doc": "<p>Verifica la validit\u00e0 di una password\nla password deve soddisfarre i seguenti requisiti:</p>\n\n<ul>\n<li>lunghezza di 8caratteri minimo</li>\n<li>contenere almeno una lettera minuscola</li>\n<li>contenere almeno una lettera maiuscola</li>\n<li>contenere almeno un numero</li>\n<li>contenere almeno un carattere speciale tra '@','$','!','%','*','?','&amp;','.'</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>password</strong>:  (str) password da verificare</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>restituisce true se la password \u00e8 valida, altrimenti c'\u00e8 un messaggio di errore e restituisce False</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">password</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneService.conferma_password", "modulename": "BEvent_app.Autenticazione.AutenticazioneService", "qualname": "conferma_password", "kind": "function", "doc": "<p>Conferma se la conferma password corrisponde alla password precedentemente inserita</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>password</strong>:  (str) prima password da confrontare</li>\n<li><strong>cpassword</strong>:  (str) seconda password da confrontare</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Restituisce true se le due password corrispondono, altrimenti restituisce False</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">password</span>, </span><span class=\"param\"><span class=\"n\">cpassword</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneService.crea_doc_utente", "modulename": "BEvent_app.Autenticazione.AutenticazioneService", "qualname": "crea_doc_utente", "kind": "function", "doc": "<p>Crea un documento utente con i dati dell'utente</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>password</strong>:  (str) password dell'utente</li>\n<li><strong>ruolo</strong>:  (str) il ruolo dell'utente (1 per Admin,2 Organizzatore, 3 Fornitore)</li>\n<li><strong>nome</strong>:  (str) nome dell'utente</li>\n<li><strong>cognome</strong>:  (str) cognome dell'utente</li>\n<li><strong>nome_utente</strong>:  (str) nome utente dell'utente</li>\n<li><strong>email</strong>:  (str) email dell'utente</li>\n<li><strong>telefono</strong>:  (str) telefono dell'utente</li>\n<li><strong>data_di_nascita</strong>:  (str) data di nascita dell'utente</li>\n<li><strong>regione</strong>: (str or None) regione dell'utente</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Restituisce un documento dei dati dell'utente</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">password</span>,</span><span class=\"param\">\t<span class=\"n\">ruolo</span>,</span><span class=\"param\">\t<span class=\"n\">nome</span>,</span><span class=\"param\">\t<span class=\"n\">cognome</span>,</span><span class=\"param\">\t<span class=\"n\">nome_utente</span>,</span><span class=\"param\">\t<span class=\"n\">email</span>,</span><span class=\"param\">\t<span class=\"n\">telefono</span>,</span><span class=\"param\">\t<span class=\"n\">data_di_nascita</span>,</span><span class=\"param\">\t<span class=\"n\">regione</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneService.registra_forn", "modulename": "BEvent_app.Autenticazione.AutenticazioneService", "qualname": "registra_forn", "kind": "function", "doc": "<p>Registra un fornitore nel sistema</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>nome</strong>:  (str) nome del fornitore</li>\n<li><strong>cognome</strong>:  (str) cognome del fornitore</li>\n<li><strong>nome_utente</strong>:  (str) nome utente del fornitore</li>\n<li><strong>email</strong>:  (str) email del fornitore</li>\n<li><strong>password</strong>:  (str) password del fornitore</li>\n<li><strong>cpassword</strong>:  (str) conferma password del fornitore</li>\n<li><strong>telefono</strong>:  (str) numero di telefono del fornitore</li>\n<li><strong>data_di_nascita</strong>:  (str) data di nascita del fornitore nel formato 'YYYY-MM-DD'</li>\n<li><strong>citta</strong>:  (str) citt\u00e0 del fornitore</li>\n<li><strong>ruolo</strong>:  (int) il ruolo per confermare che \u00e8 un fornitore</li>\n<li><strong>descrizione</strong>: (str) descrizione del fornitore</li>\n<li><strong>islocation</strong>:  (bool) indica se il fornitore \u00e8 una location o no</li>\n<li><strong>eventi_max_giorn</strong>:  (int) numero massimo di eventi che un fornitore pu\u00f2 gestire al giorno</li>\n<li><strong>via</strong>:  (str) via del fornitore</li>\n<li><strong>piva</strong>:  (str) partita IVA del fornitore</li>\n<li><strong>regione</strong>:  (str) regione del fornitore</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>restituisce un'istanza del Fornitore se la registrazione ha successo, altrimenti restituisce None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">nome</span>,</span><span class=\"param\">\t<span class=\"n\">cognome</span>,</span><span class=\"param\">\t<span class=\"n\">nome_utente</span>,</span><span class=\"param\">\t<span class=\"n\">email</span>,</span><span class=\"param\">\t<span class=\"n\">password</span>,</span><span class=\"param\">\t<span class=\"n\">cpassword</span>,</span><span class=\"param\">\t<span class=\"n\">telefono</span>,</span><span class=\"param\">\t<span class=\"n\">data_di_nascita</span>,</span><span class=\"param\">\t<span class=\"n\">citta</span>,</span><span class=\"param\">\t<span class=\"n\">ruolo</span>,</span><span class=\"param\">\t<span class=\"n\">descrizione</span>,</span><span class=\"param\">\t<span class=\"n\">islocation</span>,</span><span class=\"param\">\t<span class=\"n\">eventi_max_giorn</span>,</span><span class=\"param\">\t<span class=\"n\">via</span>,</span><span class=\"param\">\t<span class=\"n\">piva</span>,</span><span class=\"param\">\t<span class=\"n\">regione</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneService.registra_admin", "modulename": "BEvent_app.Autenticazione.AutenticazioneService", "qualname": "registra_admin", "kind": "function", "doc": "<p>Registra un amministratore nel sistema</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>nome</strong>: (str) nome dell'amministratore</li>\n<li><strong>cognome</strong>: (str) cognome dell'amministratore</li>\n<li><strong>nome_utente</strong>: (str) nome utente dell'amministratore</li>\n<li><strong>email</strong>: (str) email dell'amministratore</li>\n<li><strong>password</strong>: (str) password dell'amministratore</li>\n<li><strong>cpassword</strong>: (str) conferma della password</li>\n<li><strong>telefono</strong>: (str) numero di telefono dell'amministratore</li>\n<li><strong>data_di_nascita</strong>:  data di nascita dell'amministratore nel formato 'YYYY-MM-DD'</li>\n<li><strong>ruolo</strong>:  (int) ruolo 1 poich\u00e8 \u00e8 amministratore</li>\n<li><strong>regione</strong>:  (str) regione dell'amministratore</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Restituisce un'istanza Admin se la registrazione ha successo, altrimenti restituisce None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">nome</span>,</span><span class=\"param\">\t<span class=\"n\">cognome</span>,</span><span class=\"param\">\t<span class=\"n\">nome_utente</span>,</span><span class=\"param\">\t<span class=\"n\">email</span>,</span><span class=\"param\">\t<span class=\"n\">password</span>,</span><span class=\"param\">\t<span class=\"n\">cpassword</span>,</span><span class=\"param\">\t<span class=\"n\">telefono</span>,</span><span class=\"param\">\t<span class=\"n\">data_di_nascita</span>,</span><span class=\"param\">\t<span class=\"n\">ruolo</span>,</span><span class=\"param\">\t<span class=\"n\">regione</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneService.registra_org", "modulename": "BEvent_app.Autenticazione.AutenticazioneService", "qualname": "registra_org", "kind": "function", "doc": "<p>Registra un organizzatore nel sistema</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>nome</strong>:  (str) nome dell'organizzatore</li>\n<li><strong>cognome</strong>: (str) cognome dell'organizzatore</li>\n<li><strong>nome_utente</strong>:  (str) nome utente dell'organizzatore</li>\n<li><strong>email</strong>:  (str) email dell'organizzatore</li>\n<li><strong>password</strong>:  (str) password dell'organizzatore</li>\n<li><strong>cpassword</strong>:  (str) conferma della password</li>\n<li><strong>telefono</strong>: (str) telefono dell'organizzatore</li>\n<li><strong>data_di_nascita</strong>:  (str) data di nascita dell'organizzatore nel formato 'anno-mese-giorno'</li>\n<li><strong>citta</strong>: (str) citt\u00e0 dell'organizzatore</li>\n<li><strong>ruolo</strong>:  (int) ruolo 2 per l'organizzatore</li>\n<li><strong>regione</strong>: (str) regione dell'organizzatore</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Restituisce un'istanza di Organizzatore se la registrazione ha successo, altrimenti restituisce None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">nome</span>,</span><span class=\"param\">\t<span class=\"n\">cognome</span>,</span><span class=\"param\">\t<span class=\"n\">nome_utente</span>,</span><span class=\"param\">\t<span class=\"n\">email</span>,</span><span class=\"param\">\t<span class=\"n\">password</span>,</span><span class=\"param\">\t<span class=\"n\">cpassword</span>,</span><span class=\"param\">\t<span class=\"n\">telefono</span>,</span><span class=\"param\">\t<span class=\"n\">data_di_nascita</span>,</span><span class=\"param\">\t<span class=\"n\">citta</span>,</span><span class=\"param\">\t<span class=\"n\">ruolo</span>,</span><span class=\"param\">\t<span class=\"n\">regione</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneService.get_dati_area_organizzatore", "modulename": "BEvent_app.Autenticazione.AutenticazioneService", "qualname": "get_dati_area_organizzatore", "kind": "function", "doc": "<p>Ottiene i dati relativi all'area organizzatore</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id_organizzatore</strong>:  (str) l'id dell'organizzatore di cui si vogliono ottenere i dati</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Una tupla contentente un'itanza di Organizzatore, una lista di EventoPrivato e una lista di Biglietto</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">id_organizzatore</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneService.get_dati_home_organizzatore", "modulename": "BEvent_app.Autenticazione.AutenticazioneService", "qualname": "get_dati_home_organizzatore", "kind": "function", "doc": "<p>Ottiene i dati per la home page di un organizatore</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id_organizzatore</strong>:  (str) id dell'organizzatore di cui si vogliono ottenere i dati</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Una tupla contenente un'istanza di Evento_privato e una lista di EventoPubblico</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">id_organizzatore</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Autenticazione.AutenticazioneService.get_utente_by_email", "modulename": "BEvent_app.Autenticazione.AutenticazioneService", "qualname": "get_utente_by_email", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">email</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.FeedBack", "modulename": "BEvent_app.FeedBack", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.FeedBack.FeedBackController", "modulename": "BEvent_app.FeedBack.FeedBackController", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.FeedBack.FeedBackController.fb", "modulename": "BEvent_app.FeedBack.FeedBackController", "qualname": "fb", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;fb&#x27;&gt;"}, {"fullname": "BEvent_app.FeedBack.FeedBackController.invio_recensione", "modulename": "BEvent_app.FeedBack.FeedBackController", "qualname": "invio_recensione", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.FeedBack.FeedBackService", "modulename": "BEvent_app.FeedBack.FeedBackService", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.FeedBack.FeedBackService.db", "modulename": "BEvent_app.FeedBack.FeedBackService", "qualname": "db", "kind": "variable", "doc": "<p></p>\n", "default_value": "Database(MongoClient(host=[&#x27;localhost:27017&#x27;], document_class=dict, tz_aware=False, connect=True), &#x27;BEvent&#x27;)"}, {"fullname": "BEvent_app.FeedBack.FeedBackService.get_recensioni_associate_a_servizi", "modulename": "BEvent_app.FeedBack.FeedBackService", "qualname": "get_recensioni_associate_a_servizi", "kind": "function", "doc": "<p>Ottiene le recensioni associate a una lista di servizi</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>servizi</strong>:  (list) lista di servizi di cui si vogliono ottenere le recensioni</li>\n</ul>\n\n<p>Returns: lista di recensioni associate ai servizi specificati</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">servizi</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.FeedBack.FeedBackService.recensione_serializer", "modulename": "BEvent_app.FeedBack.FeedBackService", "qualname": "recensione_serializer", "kind": "function", "doc": "<p>Serializza un ogetto Recensione di un dizionario</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>recensione</strong>:  (recensione) oggetto di recensio da serializzare</li>\n</ul>\n\n<p>Returns: dizinario contenete i dati serializzati della recensione</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">recensione</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.FeedBack.FeedBackService.inserisci_recensione", "modulename": "BEvent_app.FeedBack.FeedBackService", "qualname": "inserisci_recensione", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">id_valutato</span>, </span><span class=\"param\"><span class=\"n\">id_valutante</span>, </span><span class=\"param\"><span class=\"n\">voto</span>, </span><span class=\"param\"><span class=\"n\">titolo</span>, </span><span class=\"param\"><span class=\"n\">descrizione</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori", "modulename": "BEvent_app.Fornitori", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.Fornitori.FornitoriController", "modulename": "BEvent_app.Fornitori.FornitoriController", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.Fornitori.FornitoriController.Fornitori", "modulename": "BEvent_app.Fornitori.FornitoriController", "qualname": "Fornitori", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;Fornitori&#x27;&gt;"}, {"fullname": "BEvent_app.Fornitori.FornitoriController.visualizza_controller", "modulename": "BEvent_app.Fornitori.FornitoriController", "qualname": "visualizza_controller", "kind": "function", "doc": "<p>serve a visualizzare tutti i dati relativi agli eventi( sia pubblici che privati ),servizi offerti, generalit\u00e0\ndel fornitore :return: Pagina del fornitore AreaFornitore.Html</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriController.aggiungi_foto_fornitore_controller", "modulename": "BEvent_app.Fornitori.FornitoriController", "qualname": "aggiungi_foto_fornitore_controller", "kind": "function", "doc": "<p>Aggiunge una foto al fornitore</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>reindirizza alla a pagina del fornitore</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriController.elimina_servizio_controller", "modulename": "BEvent_app.Fornitori.FornitoriController", "qualname": "elimina_servizio_controller", "kind": "function", "doc": "<p>Elimina servizio scelto dal fornitore</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>reindirizza alla a pagina del fornitore</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriController.modifica_servizio_controller", "modulename": "BEvent_app.Fornitori.FornitoriController", "qualname": "modifica_servizio_controller", "kind": "function", "doc": "<p>Modifica servizio scelto dal fornitore</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>reindirizza alla a pagina del fornitore</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriController.aggiungi_servizio_controller", "modulename": "BEvent_app.Fornitori.FornitoriController", "qualname": "aggiungi_servizio_controller", "kind": "function", "doc": "<p>Serve ad aggiungerere un servizio nell'aria del fornitore :return: reindirizza all'area fornitore nel caso in cui\ntutti i campi rispettino le condizioni altrimenti restituisce un errore</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriController.elimina_evento_controller", "modulename": "BEvent_app.Fornitori.FornitoriController", "qualname": "elimina_evento_controller", "kind": "function", "doc": "<p>elimina un evento pubblico</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>reindirizza alla a pagina del fornitore</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriController.visualizza_evento_dettagli_controller", "modulename": "BEvent_app.Fornitori.FornitoriController", "qualname": "visualizza_evento_dettagli_controller", "kind": "function", "doc": "<p>Visualizza i dettagli dell'evento in cui \u00e8 stato prenotato il servizio del fornitore</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>reindirizza alla pagina dettagli dell'evento</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriController.invio_feedback_controller", "modulename": "BEvent_app.Fornitori.FornitoriController", "qualname": "invio_feedback_controller", "kind": "function", "doc": "<p>Permette l'inserimento di un feedback al servizio offerto di un altro fornitore</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>reindirizza alla a pagina del fornitore</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriController.sponsorizza_evento", "modulename": "BEvent_app.Fornitori.FornitoriController", "qualname": "sponsorizza_evento", "kind": "function", "doc": "<p>permette di sponsorizzare un evento</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>reindirizza alla a pagina del fornitore</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriService", "modulename": "BEvent_app.Fornitori.FornitoriService", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.Fornitori.FornitoriService.is_valid_number", "modulename": "BEvent_app.Fornitori.FornitoriService", "qualname": "is_valid_number", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriService.validate_servizio_data", "modulename": "BEvent_app.Fornitori.FornitoriService", "qualname": "validate_servizio_data", "kind": "function", "doc": "<p>serve un validare i dati di servizio</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>descrizione</strong>:  str</li>\n<li><strong>tipo</strong>:  str</li>\n<li><strong>prezzo</strong>:  float</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>false in caso un campo non risetti le condizioni,\n  True se invece i campi sono validi</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">descrizione</span>, </span><span class=\"param\"><span class=\"n\">tipo</span>, </span><span class=\"param\"><span class=\"n\">prezzo</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriService.get_tutti_servizi_byfornitore", "modulename": "BEvent_app.Fornitori.FornitoriService", "qualname": "get_tutti_servizi_byfornitore", "kind": "function", "doc": "<p>serve a prendere tutti i servizi di uno specifico fornitore grazie al suo  id</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id_fornitore</strong>:  (str) id del fornitore</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>lista dei servizi del fornitore con un dato id</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">id_fornitore</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriService.get_dati_fornitore", "modulename": "BEvent_app.Fornitori.FornitoriService", "qualname": "get_dati_fornitore", "kind": "function", "doc": "<p>serve a ricavare tutti i dati di uno specifico fornitore grazie al suo id</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id_fornitore</strong>:  (str) id del fornitore</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>lista dei dati del fornitore</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">id_fornitore</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriService.aggiorna_foto_fornitore", "modulename": "BEvent_app.Fornitori.FornitoriService", "qualname": "aggiorna_foto_fornitore", "kind": "function", "doc": "<p>serve ad aggiornare le foto di un dato fornitore</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id_fornitore</strong>:  (str) id del fornitore</li>\n<li><strong>byte_arrays_bytes</strong>:  (byte_array) Array di byte che rappresentano le foto di un fornitore</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>messaggio di successo in caso di riuscito inseromento al contrario messaggio di errore</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">id_fornitore</span>, </span><span class=\"param\"><span class=\"n\">byte_arrays_bytes</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriService.elimina_servizio", "modulename": "BEvent_app.Fornitori.FornitoriService", "qualname": "elimina_servizio", "kind": "function", "doc": "<p>serve ad eliminare un servizio dato il suo id, se il servizio non \u00e8 stato prenotato e successivamente pagato elimina\ndel tutto il servizio dal database, altrimenti imposta a true il campo \"isDeleated\"</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>servizio_id</strong>:  (str) id del servizio offerto</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">servizio_id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriService.modifica_servizio", "modulename": "BEvent_app.Fornitori.FornitoriService", "qualname": "modifica_servizio", "kind": "function", "doc": "<p>serve a modificare un servizio offerto, se quest'ultimo \u00e8 stato gi\u00e0 prenotato in un evento crea un nuovo servizio\nofferto\ncon i campi modificati mentre il servizio con quell'id gi\u00e0 esistente cambier\u00e0 il campo \"isCurrentVersion\" con l'id\ndel servizio appena creato.\nse quest'ultimo non \u00e8</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>nuovi_dati</strong>:  (dict) dizionario con tutti  i dati relativi al servizio</li>\n<li><strong>servizio_id</strong>:  (string) stringa che reappresenta l'id del servizio</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>restituisce l'id del servizio modificato</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nuovi_dati</span>, </span><span class=\"param\"><span class=\"n\">servizio_id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriService.aggiungi_servizio", "modulename": "BEvent_app.Fornitori.FornitoriService", "qualname": "aggiungi_servizio", "kind": "function", "doc": "<p>Aggiunge al database un servizio se quest'ultimo \u00e8 valido</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>nuovi_dati</strong>:  (dict) dizionario con tutti  i dati relativi al servizio</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True se il servizio \u00e8 stato inserito, false se quest'ultimo non \u00e8 stato inserito</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nuovi_dati</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriService.get_eventi_by_fornitore_privato", "modulename": "BEvent_app.Fornitori.FornitoriService", "qualname": "get_eventi_by_fornitore_privato", "kind": "function", "doc": "<p>serve ad ottenere la tutti gli eventi privati nei quali un fornitore ha un suo servizio prenotato</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id</strong>:  (str) id del fornitore</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>la lista degli eventi</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriService.get_eventi_fornitore_pubblico", "modulename": "BEvent_app.Fornitori.FornitoriService", "qualname": "get_eventi_fornitore_pubblico", "kind": "function", "doc": "<p>serve ad ottenere la tutti gli eventi pubblici nei quali un fornitore ha un suo servizio prenotato</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id</strong>:  (str) id del fornitore</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>la lista degli eventi</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriService.cancella_evento", "modulename": "BEvent_app.Fornitori.FornitoriService", "qualname": "cancella_evento", "kind": "function", "doc": "<p>Cancella un evento Pubblico in base all'id dell'evento</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id</strong>:  (str) id dell'evento</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriService.get_dettagli_evento", "modulename": "BEvent_app.Fornitori.FornitoriService", "qualname": "get_dettagli_evento", "kind": "function", "doc": "<p>serve a vedere tutti i dettagli relativi ad un evento privato</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id</strong>:  (str) id dell'evento</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>evento cercato</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriService.get_dati_organizzatore", "modulename": "BEvent_app.Fornitori.FornitoriService", "qualname": "get_dati_organizzatore", "kind": "function", "doc": "<p>serve a vedere tutti i dettagli relativi ad un organizzatore tramite l'id di un evento</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id</strong>:  (str) id dell'evento</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>organizzatore ricercato</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriService.get_dati_servizi", "modulename": "BEvent_app.Fornitori.FornitoriService", "qualname": "get_dati_servizi", "kind": "function", "doc": "<p>serve a vedere tutti i dettagli dei servizi offerti impiegati in un determinato evento escludendo i servizi di un\nfornitore( ovvero quello che ha richiesto questa funzione) :param id: (str) id dell'evento :param id_fornitore: (\nstr) id del fornitore da escludere dalla ricerca :return: organizzatore ricercato</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">id</span>, </span><span class=\"param\"><span class=\"n\">id_fornitore</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriService.invio_feed_back", "modulename": "BEvent_app.Fornitori.FornitoriService", "qualname": "invio_feed_back", "kind": "function", "doc": "<p>Funzione che permette di lasciare un feedback</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id_valutato</strong>:  (str) id del servizio valutato</li>\n<li><strong>id_valutante</strong>:  (str) id del fornitore che sta lasciando il feedback</li>\n<li><strong>valutazione</strong>: (str) valutazione del servizio</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">id_valutato</span>, </span><span class=\"param\"><span class=\"n\">id_valutante</span>, </span><span class=\"param\"><span class=\"n\">valutazione</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriService.get_fornitori", "modulename": "BEvent_app.Fornitori.FornitoriService", "qualname": "get_fornitori", "kind": "function", "doc": "<p>Recupera una lista di oggetti Fornitore basata sulla lista fornita di ID fornitori.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id_fornitori</strong>:  Lista di str\nUna lista di ID fornitori come stringhe.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Lista di Fornitore\n      Una lista di oggetti Fornitore.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">id_fornitori</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Fornitori.FornitoriService.sponsorizza", "modulename": "BEvent_app.Fornitori.FornitoriService", "qualname": "sponsorizza", "kind": "function", "doc": "<p>Imposta lo stato di pagamento di un evento da sponsorizzare come pagato.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id_evento</strong>:  str\nL'ID univoco dell'evento da sponsorizzare.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">id_evento</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento", "modulename": "BEvent_app.GestioneEvento", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoController", "modulename": "BEvent_app.GestioneEvento.GestioneEventoController", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoController.ge", "modulename": "BEvent_app.GestioneEvento.GestioneEventoController", "qualname": "ge", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;ge&#x27;&gt;"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoController.visualizza_fornitori", "modulename": "BEvent_app.GestioneEvento.GestioneEventoController", "qualname": "visualizza_fornitori", "kind": "function", "doc": "<p>Serve ad accedere alla pagina sceltafornitori.html passando in risposta i fornitori disponibili, i servizi e le\nrecensioni relative a quei fornitori</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Pagina 'sceltafornitori.html con tre liste di oggetti: fornitori(di tipo Fornitore), servizi( di tipo\n  Servizio Offerto) e recensioni (di tipo Recensione)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoController.filtro_categoria", "modulename": "BEvent_app.GestioneEvento.GestioneEventoController", "qualname": "filtro_categoria", "kind": "function", "doc": "<p>Serve  a elaborare una richiesta in Ajax e in base alla categoria passata come parametro restituisce la lista dei\nservizi che appartengono a quel tipo e dei relativi fornitori</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Risposta in formato JSON che continene due liste di oggetti: fornitori_filtrati(di tipo Fornitore) e\n  servizi_filtrati( di tipo Servizio Offerto)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoController.filtro_regione", "modulename": "BEvent_app.GestioneEvento.GestioneEventoController", "qualname": "filtro_regione", "kind": "function", "doc": "<p>Serve  a elaborare una richiesta in Ajax e in base alla regione passata come parametro restituisce la lista dei\nfornitori locati in quella regione e dei relativi servizi</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Risposta in formato JSON che continene due liste di oggetti: fornitori_filtrati (di tipo Fornitore) e\n  servizi_filtrati ( di tipo Servizio Offerto)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoController.filtro_barra_ricerca", "modulename": "BEvent_app.GestioneEvento.GestioneEventoController", "qualname": "filtro_barra_ricerca", "kind": "function", "doc": "<p>Serve  a elaborare una richiesta in Ajax e in base ad una parola passata come parametro restituisce la lista dei\nfornitori e dei servizi che contengono tale parola</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Risposta in formato JSON che continene due liste di oggetti: fornitori(di tipo Fornitore) e servizi( di\n  tipo Servizio Offerto)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoController.filtro_prezzo", "modulename": "BEvent_app.GestioneEvento.GestioneEventoController", "qualname": "filtro_prezzo", "kind": "function", "doc": "<p>Serve  a elaborare una richiesta in Ajax e in base a un prezzo minimo e un prezzo massimo passati come parametri\nrestituisce la lista dei servizi che hanno un prezzo compreso nel range e la lista dei relativi fornitori</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Risposta in formato JSON che continene due liste di oggetti: fornitori(di tipo Fornitore) e servizi( di\n  tipo Servizio Offerto)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoController.aggiorna_right_column", "modulename": "BEvent_app.GestioneEvento.GestioneEventoController", "qualname": "aggiorna_right_column", "kind": "function", "doc": "<p>Serve a elaborare una richiesta Ajax e in base all'email passata come parametro restituisce il singolo fornitore che\ncorrisponde all'email e una lista con i suoi relativi servizi e le relative recensioni</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Risposta in formato JSON che continene un oggetto e due liste di oggetti: oggetto fornitore_scelto(di\n  tipo Fornitore), lista_servizi( lista di oggetti di tipo Servizio Offerto) e recensioni (lista di oggetti di tipo\n  Recensione)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoController.salva_nel_carrello", "modulename": "BEvent_app.GestioneEvento.GestioneEventoController", "qualname": "salva_nel_carrello", "kind": "function", "doc": "<p>Serve a rispondere ad una richiesta Ajax e aggiungere ai cookie del carrello l'id del servizio che l'organizzatore\nvuole aggiungere al suo evento in modo che possa poi essere visualizzato e pagato in seguito. Se i cookie del\ncarrello non sono ancora stati creati, li crea e fa in modo che durino un mese.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>ritorna l'esito dell'operazione in formato JSON</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoController.visualizza_riepilogo", "modulename": "BEvent_app.GestioneEvento.GestioneEventoController", "qualname": "visualizza_riepilogo", "kind": "function", "doc": "<p>Serve a visualizzare la pagina di riepilogo delle scelte effettuate dall'organizzatore durante la creazione\ndell'evento. Prende dai cookie i servizi precedentemente selezionati dall'organizzatore per ottenere la lista di\nservizi e relativi fornitori scelti.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Pagina riepilogoscelte.html con due liste: fornitori (lista di oggetti di tipo Fornitore) e servizi(lista\n  di oggetti di tipo Servizio Offferto)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoController.elimina_servizio", "modulename": "BEvent_app.GestioneEvento.GestioneEventoController", "qualname": "elimina_servizio", "kind": "function", "doc": "<p>Serve ad eliminare un servizio selezionato dai cookie.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>redirect alla servlet visualizza riepilogo</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoController.annulla_creazione_evento", "modulename": "BEvent_app.GestioneEvento.GestioneEventoController", "qualname": "annulla_creazione_evento", "kind": "function", "doc": "<p>Serve ad annullare la creazione di un evento, eliminando dalla sessione i dati inseriti durante la creazione ed\neliminando i cookie del carrello.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>redirect alla pagina organizzatore</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoController.salva_evento_come_bozza", "modulename": "BEvent_app.GestioneEvento.GestioneEventoController", "qualname": "salva_evento_come_bozza", "kind": "function", "doc": "<p>Serve a salvare un evento come bozza nel database nel caso l'utente voglia proseguire in un secondo momento alla\ncreazione effettiva dell'evento e quindi pagarlo. Rimuove dalla sessione i dati inseriti durante la creazione ed\nelimina i cookie del carrello.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>redirect all'home organizzatore nel caso il salvataggio nel db vada a buon fine, altrimenti ritorna il\n  redirect a visualizza riepilogo</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoController.salva_evento_pagato", "modulename": "BEvent_app.GestioneEvento.GestioneEventoController", "qualname": "salva_evento_pagato", "kind": "function", "doc": "<p>Serve a salvare un evento nel database segnandolo come pagato, in modo che la prenotazione dei fornitori avvenga.\nRimuove dalla sessione i dati inseriti durante la creazione ed elimina i cookie del carrello.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>redirect all'home organizzatore nel caso il salvataggio nel db vada a buon fine, altrimenti ritorna il\n  redirect a visualizza riepilogo</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoController.salva_evento", "modulename": "BEvent_app.GestioneEvento.GestioneEventoController", "qualname": "salva_evento", "kind": "function", "doc": "<p>Serve a salvare un evento nel database.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>is_pagato</strong>:  (bool) indica se l'evento \u00e8 stato pagato o meno</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>oggetto evento che rappresenta l'evento appena salvato nel database</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">is_pagato</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoController.elimina_evento_route", "modulename": "BEvent_app.GestioneEvento.GestioneEventoController", "qualname": "elimina_evento_route", "kind": "function", "doc": "<p>Serve ad eliminare un evento privato.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>redirect all'area organizzatore</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoController.creazione_evento_pubblico", "modulename": "BEvent_app.GestioneEvento.GestioneEventoController", "qualname": "creazione_evento_pubblico", "kind": "function", "doc": "<p>Serve a creare la pagina per creare un evento pubblico di un fornitore.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>pagina creaeventopubblico.html</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoController.crea_event_publico", "modulename": "BEvent_app.GestioneEvento.GestioneEventoController", "qualname": "crea_event_publico", "kind": "function", "doc": "<p>Serve a creare un evento pubblico.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>messaggio di successo</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoController.acquista_biglietto_controller", "modulename": "BEvent_app.GestioneEvento.GestioneEventoController", "qualname": "acquista_biglietto_controller", "kind": "function", "doc": "<p>Serve ad effettuare l'acquisto di un biglietto</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>redirect all'area organizzatore</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoController.visualizza_evento_dettagli_controller", "modulename": "BEvent_app.GestioneEvento.GestioneEventoController", "qualname": "visualizza_evento_dettagli_controller", "kind": "function", "doc": "<p>Serve a visualizzare i dettagli di un evento creato da un organizzatore</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>dettagliEventoPrivato.html con i parametri evento (oggetto di tipo evento priavto), organizzatore(oggetto\n  di tipo Organizzatore) e servizi (lista di oggetti di tipo servizio offerto)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.db", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "db", "kind": "variable", "doc": "<p></p>\n", "default_value": "Database(MongoClient(host=[&#x27;localhost:27017&#x27;], document_class=dict, tz_aware=False, connect=True), &#x27;BEvent&#x27;)"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.is_valid_data", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "is_valid_data", "kind": "function", "doc": "<p>Funzione per verificare che la data inserita sia valida. Viene quindi controllato che la data sia &gt; alla data\nodierna.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong>:  (str) data inserita dall'utente nella pagina SceltaEventoDaCreare.html</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True se la data \u00e8 corretta, False altrimenti</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.get_fornitori_disponibli", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "get_fornitori_disponibli", "kind": "function", "doc": "<p>Funzione che ottiene tutti i fornitori che sono disponibili in una determinata data, prendendola dal database.\nUsa una pipeline per verificare quali sono disponibili.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_richiesta</strong>:  (str) stringa che indica la data in cui si vuole creare un evento</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>lista di oggetti di tipo Fornitore, ovvero i fornitori disponibli</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data_richiesta</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.get_servizi", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "get_servizi", "kind": "function", "doc": "<p>Funzione che ottiene dal database tutti i servizi che si possono prenotare in una determinata data, poich\u00e8 alcuni\npotrebbero essere impegnati in un evento.\n-Vengono prese dal databse le collezioni Servizio Offerto e Evento\n-Viene controllata la versione dei servizi in modo da prendere i servizi la cui versione corrisponde all'ultima\nrilasciata dal fornitore\n-Usando la lista di servizi precedentemente filtrati, essi vengono nuovamente filtrati per prendere solo i servizi\nche non sono prenotati in un evento nella data inserita dall'organizzatore.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_richiesta</strong>:  (str) stringa che indica la data in cui si vuole creare un evento</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>lista di oggetti di tipo Servizio Offerto, ovvero i servizi disponibli</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data_richiesta</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.filtro_categoria_liste", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "filtro_categoria_liste", "kind": "function", "doc": "<p>Funzione per ottenere dal database la lista di fornitori e servizi che appartengono alla categoria inserita\ndall'utente. -Vengono prese le liste di fornitori e servizi disponibli nella data indicata dall'organizzatore.\n-La lista dei servizi viene filtrata per prendere i servizi che hanno il parametro \"tipo\" che corrisponde alla\ncategoria indicata dall'organizzatore. -In base ai servizi filtrati viene filtrata la lista dei fornitori per\nottenere i fornitori ai quali appartengono i servizi selezionati.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>categoria</strong>:  (str) stringa che indica la categoria di servizio che si vuole filtrare</li>\n<li><strong>data</strong>:  (str) stringa che indica la data nella quale si vuole fare l'evento</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>due liste filtrate di oggetti: servizi filtrati (lista di oggetti di tipo Servizio Offerto) e fornitori\n  filtrati (lista di oggetti di tipo Fornitore)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">categoria</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.filtro_regione_liste", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "filtro_regione_liste", "kind": "function", "doc": "<p>Funzione per ottenere dal database la lista di fornitori e servizi che si trovano nella regione inserita dall'\norganizzatore.\n-Vengono prese le liste di fornitori e servizi disponibli nella data indicata dall'organizzatore.\n-La lista dei fornitori viene filtrata per prendere i fornitori che hanno il parametro \"regione\" che corrisponde\nalla regione indicata dall'organizzatore.\n-In base alla lista di fornitori selezionati vengono presi i servizi associati.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>regione</strong>:  (str) stringa che indica la regione a cui devono appartenere i fornitori</li>\n<li><strong>data</strong>:  (str) stringa che indica la data nella quale si vuole fare l'evento</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>due liste filtrate di oggetti: servizi_filtrati (lista di oggetti di tipo Servizio Offerto) e\n  fornitori_filtrati (lista di oggetti di tipo Fornitore)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">regione</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.filtro_prezzo_liste", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "filtro_prezzo_liste", "kind": "function", "doc": "<p>Funzione per ottenere dal database la lista di fornitori e servizi il cui prezzo si trova nel range di prezzo\ninserito dall'organizzatore.\n-Vengono prese le liste di fornitori e servizi disponibli nella data indicata dall'organizzatore.\n-La lista dei servizi viene filtrata per prendere i servizi che rientrano nel range di prezzi indicati dall'\norganizzatore.\n-In base alla lista di servizi selezionati vengono presi i fornitori associati.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>prezzo_min</strong>:  (str) stringa che indica il prezzo minimo del range di prezzo scelto dall'organizzatore</li>\n<li><strong>prezzo_max</strong>:  (str) stringa che indica il prezzo massimo del range di prezzo scelto dall'organizzatore</li>\n<li><strong>data</strong>:  (str) stringa che indica la data nella quale si vuole fare l'evento</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>due liste filtrate di oggetti: servizi_filtrati (lista di oggetti di tipo Servizio Offerto) e\n  fornitori_filtrati (lista di oggetti di tipo Fornitore)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">prezzo_min</span>, </span><span class=\"param\"><span class=\"n\">prezzo_max</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.filtrare_servizi_per_fornitore", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "filtrare_servizi_per_fornitore", "kind": "function", "doc": "<p>Funzione che restituisce la lista di servizi filtrata in base ai fornitori precedentemente filtrati. Per farlo viene\nusata una lista di id dei fornitori passati come argomento.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>servizi_non_filtrati</strong>:  lista di oggetti di tipo servizio offerto non filtrati in base al fornitore</li>\n<li><strong>fornitori_filtrati</strong>:  lista di oggetti di tipo fornitore che serve a filtrare la lista di servizi\ncorrispondenti</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>una lista servizi_filtrati (lista di oggetti di tipo Servizio Offerto)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">servizi_non_filtrati</span>, </span><span class=\"param\"><span class=\"n\">fornitori_filtrati</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.filtro_ricerca", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "filtro_ricerca", "kind": "function", "doc": "<p>Funzione per ottenere dal database la lista di fornitori e servizi la cui descrizione o nome contiene la parola\ninserita dall'organizzatore.\n-Vengono prese le liste di fornitori e servizi disponibli nella data indicata dall'organizzatore.\n-Vengono filtrati i fornitori cercando la parola sia nel nome che nella descrizione\n-In base alla lista di fornitori selezionati vengono presi i servizi associati.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ricerca</strong>:  (str) stringa che indica la parola da ricercare scelta dall'organizzatore</li>\n<li><strong>data</strong>:  (str) stringa che indica la data nella quale si vuole fare l'evento</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>due liste filtrate di oggetti: servizi_filtrati (lista di oggetti di tipo Servizio Offerto) e\n  fornitori_filtrati (lista di oggetti di tipo Fornitore)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ricerca</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.get_fornitore_by_email", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "get_fornitore_by_email", "kind": "function", "doc": "<p>Funzione per ottenere dal database i dati del fornitore in base alla sua email</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>email</strong>:  (str) stringa che contiene l'email del fornitore che si vuole cercare</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>oggetto Fornitore, che rappresenta il fornitore trovato nel database</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">email</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.get_servizi_fornitore", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "get_servizi_fornitore", "kind": "function", "doc": "<p>Funzione per ottenere dal database i servizi corrispondenti a un singolo fornitore. Vengono prima presi tutti i\nservizi disponibili in una data scelta e poi vengono filtrati per ottenere solo quelli associati al fornitore\nindicato.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fornitore</strong>:  (obj) oggetto della classe Fornitore che contiene i dati del fornitore scelto</li>\n<li><strong>datarichiesta</strong>:  (str)  stringa che indica la data nella quale si vuole fare l'evento</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>lista_servizi, ovvero una lista di oggetti di tipo Servizio Offerto</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fornitore</span>, </span><span class=\"param\"><span class=\"n\">datarichiesta</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.fornitore_serializer", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "fornitore_serializer", "kind": "function", "doc": "<p>Funzione per serializzare un oggetto della classe fornitore in modo che sia passabile come risposta json.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fornitore</strong>:  (obj) oggetto della classe Fornitore che contiene i dati del fornitore scelto</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>dizionario che rappresenta i dati dell'oggetto fornitore</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fornitore</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.servizio_serializer", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "servizio_serializer", "kind": "function", "doc": "<p>Funzione per serializzare un oggetto della classe servizio in modo che sia passabile come risposta json.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>servizio</strong>:  (obj) oggetto della classe Servizio Offerto che contiene i dati del servizio scelto</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>dizionario che rappresenta i dati dell'oggetto servizio</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">servizio</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.get_servizio_by_id", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "get_servizio_by_id", "kind": "function", "doc": "<p>Funzione per ottenere dal database i dati di un singolo servizio in base al suo id</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id_servizio</strong>:  (str) stringa che rappresenta l'id del servizio scelto</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>oggetto di tipo servizio Offerto</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">id_servizio</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.get_fornitore_by_id", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "get_fornitore_by_id", "kind": "function", "doc": "<p>Funzione per ottenere dal database i dati di un singolo fornitore in base al suo id</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id_fornitore</strong>:  (str) stringa che rappresenta l'id del fornitore scelto</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>oggetto di tipo fornitore</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">id_fornitore</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.ottieni_servizi_e_fornitori_cookie", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "ottieni_servizi_e_fornitori_cookie", "kind": "function", "doc": "<p>Funzione per ottenere la lista dei fornitori e dei servizi in base a ci\u00f2 che \u00e8 stato salvato nei cookie.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>carrello</strong>:  (str) stringa che rappresenta i cookie del carrello</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>due liste di oggetti: lista_servizi (lista di oggetti di tipo servizio Offerto) e lista_fornitori (lista di\n  oggetti di tipo Fornitore)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">carrello</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.crea_documento_evento_generico", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "crea_documento_evento_generico", "kind": "function", "doc": "<p>Funzione per creare il documento da inserire nel database che contiene gli attributi dell'evento comuni sia all'\nevento privato che all'evento pubblico</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_evento</strong>:  (str) stringa che rappresenta la data in cui si terr\u00e0 l'evento</li>\n<li><strong>descrizione</strong>:  (str) stringa che rappresenta la descrzione dell'evento</li>\n<li><strong>tipo_evento</strong>:  (str) stringa che rappresenta il tipo di evento</li>\n<li><strong>n_invitati</strong>:  (str) stringa che rappresenta il numero di persone invitate o i posti disponibli</li>\n<li><strong>foto_byte_array</strong>:  (byte_array) byte array che rappresenta l'immagine locandina dell'evento</li>\n<li><strong>ruolo</strong>:  (str) indica se l'evento \u00e8 di tipo privato (\"2\") o pubblico (\"3\")</li>\n<li><strong>id_fornitori</strong>:  (array) array che continene l'id dei fornitori coinvolti nell'evento</li>\n<li><strong>id_servizi</strong>:  (array) array che continene l'id dei servizi coinvolti nell'evento</li>\n<li><strong>is_pagato</strong>:  (bool) indica se l'evento \u00e8 stato pagato</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>documento da inserire nel database</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data_evento</span>,</span><span class=\"param\">\t<span class=\"n\">descrizione</span>,</span><span class=\"param\">\t<span class=\"n\">tipo_evento</span>,</span><span class=\"param\">\t<span class=\"n\">n_invitati</span>,</span><span class=\"param\">\t<span class=\"n\">foto_byte_array</span>,</span><span class=\"param\">\t<span class=\"n\">ruolo</span>,</span><span class=\"param\">\t<span class=\"n\">id_fornitori</span>,</span><span class=\"param\">\t<span class=\"n\">id_servizi</span>,</span><span class=\"param\">\t<span class=\"n\">is_pagato</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.save_evento", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "save_evento", "kind": "function", "doc": "<p>Funzione per salvare l'evento privato nel database che crea il documento da inserire mettendo come valore dei campi\ni dati passati come parametri.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>lista_servizi</strong>: (list) lista di oggetti servizio offerto</li>\n<li><strong>lista_fornitori</strong>:  (list) lista di oggetti fornitore</li>\n<li><strong>tipo_evento</strong>:  (str) stringa che rappresenta il tipo di evento che si sta creando</li>\n<li><strong>data_evento</strong>:  (str) stringa che rappresenta la data nella quale si svolger\u00e0 l'evento</li>\n<li><strong>n_invitati</strong>:  (str) stringa che rappresenta il numero di invitati previsti</li>\n<li><strong>nome_festeggiato</strong>:  (str) stringa che rappresenta il nome del festeggiato</li>\n<li><strong>descrizione</strong>:  (str) stringa che rappresenta una descrizione dell'evento</li>\n<li><strong>is_pagato</strong>:  (bool) booleano che indica se l'evento \u00e8 stato pagato o meno</li>\n<li><strong>ruolo</strong>:  (str) stringa che indica se l'evento \u00e8 pubblico o privato</li>\n<li><strong>foto_byte_array</strong>:  (byte_array) byte array che rappresenta una foto dell'evento</li>\n<li><strong>prezzo</strong>:  (str) stringa che rappresenta il prezzo totale dell'evento</li>\n<li><strong>id_organizzatore</strong>:  (str) stringa che rappresenta l'id dell'organizzatore</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>l'evento privato inserito nel database</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">lista_servizi</span>,</span><span class=\"param\">\t<span class=\"n\">lista_fornitori</span>,</span><span class=\"param\">\t<span class=\"n\">tipo_evento</span>,</span><span class=\"param\">\t<span class=\"n\">data_evento</span>,</span><span class=\"param\">\t<span class=\"n\">n_invitati</span>,</span><span class=\"param\">\t<span class=\"n\">nome_festeggiato</span>,</span><span class=\"param\">\t<span class=\"n\">descrizione</span>,</span><span class=\"param\">\t<span class=\"n\">is_pagato</span>,</span><span class=\"param\">\t<span class=\"n\">ruolo</span>,</span><span class=\"param\">\t<span class=\"n\">foto_byte_array</span>,</span><span class=\"param\">\t<span class=\"n\">prezzo</span>,</span><span class=\"param\">\t<span class=\"n\">id_organizzatore</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.elimina_evento", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "elimina_evento", "kind": "function", "doc": "<p>Funzione per eliminare un evento dal databse in base all'id dell'evento fornito</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id_evento</strong>:  (str) id dell'evento che si vuole cancellare</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>true per indicare che l'evento \u00e8 stato cancellato</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">id_evento</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.crea_evento_pubblico", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "crea_evento_pubblico", "kind": "function", "doc": "<p>Funzione per salvare l'evento pubblico nel database che crea il documento da inserire mettendo come valore dei campi\ni dati passati come parametri.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong>:  (str) stringa che rappresenta la data nella quale si terr\u00e0 l'evento</li>\n<li><strong>n_persone</strong>:  (str) stringa che rappresenta il numero di posti disponibili</li>\n<li><strong>descrizione</strong>:  (str) stringa che rappresenta una descrizione dell'evento</li>\n<li><strong>locandina</strong>:  (byte_array) byte array che rappresenta una foto dell'evento</li>\n<li><strong>ruolo</strong>:  (str) stringa che rappresenta il ruolo dell'evento se pubblico o privato</li>\n<li><strong>tipo</strong>:  (str) stringa che rappresenta il tipo di evento pubblico</li>\n<li><strong>is_pagato</strong>:  (bool) booleano che indica se l'evento \u00e8 stato pagato per la sponsorizzazione o meno</li>\n<li><strong>fornitori_associati</strong>:  (list) lista di oggetti fornitore</li>\n<li><strong>servizi_associati</strong>:  (list) lista di oggetti servizio offerto</li>\n<li><strong>prezzo</strong>:  (str) stringa che rappresenta il prezzo di un biglietto per partecipare all'evento</li>\n<li><strong>ora</strong>:  (str) stringa che rappresenta l'ora in cui si terr\u00e0 l'evento</li>\n<li><strong>nome</strong>:  (str) stringa che rappresenta il nome dell'evento</li>\n<li><strong>via</strong>:  (str) stringa che rappresenta il luogo dove si terr\u00e0 l'evento</li>\n<li><strong>regione</strong>:  (str) stringa che rappresenta la regione dove si terr\u00e0 l'evento</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>nulla</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span>,</span><span class=\"param\">\t<span class=\"n\">n_persone</span>,</span><span class=\"param\">\t<span class=\"n\">descrizione</span>,</span><span class=\"param\">\t<span class=\"n\">locandina</span>,</span><span class=\"param\">\t<span class=\"n\">ruolo</span>,</span><span class=\"param\">\t<span class=\"n\">tipo</span>,</span><span class=\"param\">\t<span class=\"n\">is_pagato</span>,</span><span class=\"param\">\t<span class=\"n\">fornitori_associati</span>,</span><span class=\"param\">\t<span class=\"n\">servizi_associati</span>,</span><span class=\"param\">\t<span class=\"n\">prezzo</span>,</span><span class=\"param\">\t<span class=\"n\">ora</span>,</span><span class=\"param\">\t<span class=\"n\">nome</span>,</span><span class=\"param\">\t<span class=\"n\">via</span>,</span><span class=\"param\">\t<span class=\"n\">regione</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.valid_evento", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "valid_evento", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">n_persone</span>, </span><span class=\"param\"><span class=\"n\">tipo</span>, </span><span class=\"param\"><span class=\"n\">prezzo</span>, </span><span class=\"param\"><span class=\"n\">ora</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.get_tutti_servizi_by_fornitore_location", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "get_tutti_servizi_by_fornitore_location", "kind": "function", "doc": "<p>Funzione che prende i servizi di tipo location associati ad un fornitore</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id_fornitore</strong>:  (str) id del fornitore scelto</li>\n</ul>\n\n<p>:return : lista_servizi, ovvero una lista di oggetti di tipo servizio offerto</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">id_fornitore</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.acquista_biglietto", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "acquista_biglietto", "kind": "function", "doc": "<p>Funzione per acquistare un biglietto e salvarlo nel database. Per salvarlo recupera delle informazioni utili dalla\ncollezione evento. Inoltre modifica la variabile biglietti disponibili nel documento dell'evento a cui\ncorrispondono i biglietti</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id_evento</strong>:  (str) stringa che rappresenta l'id dell'evento</li>\n<li><strong>id_organizzatore</strong>:  (str) stringa che reppresenta l'id dell'organizzatore</li>\n<li><strong>numero_biglietti</strong>:  (str) stringa che indica il numero di biglietti che si vogliono acquistare</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>nulla</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">id_evento</span>, </span><span class=\"param\"><span class=\"n\">id_organizzatore</span>, </span><span class=\"param\"><span class=\"n\">numero_biglietti</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.GestioneEvento.GestioneEventoService.get_dati_servizi_organizzatore", "modulename": "BEvent_app.GestioneEvento.GestioneEventoService", "qualname": "get_dati_servizi_organizzatore", "kind": "function", "doc": "<p>Funzione che prende dal database i servizi coinvolti nell'evento dell'organizzatore</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id_evento</strong>:  (str) stringa che rappresenta l'id dell'evento</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>servizi_lista (lista di oggetti di tipo Servizio Offerto)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">id_evento</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.InterfacciaPersistenza", "modulename": "BEvent_app.InterfacciaPersistenza", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Admin", "modulename": "BEvent_app.InterfacciaPersistenza.Admin", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Admin.Admin", "modulename": "BEvent_app.InterfacciaPersistenza.Admin", "qualname": "Admin", "kind": "class", "doc": "<p>Classe che rappresenta un utente con privilegi di amministratore, derivata dalla classe base Utente.</p>\n\n<p>Args:\n    user_data (dict): Dati dell'utente comuni a tutti gli utenti.</p>\n\n<p>Attributi:\n    isAdmin (bool): Indica se l'utente ha privilegi di amministratore.</p>\n", "bases": "BEvent_app.InterfacciaPersistenza.Utente.Utente"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Admin.Admin.__init__", "modulename": "BEvent_app.InterfacciaPersistenza.Admin", "qualname": "Admin.__init__", "kind": "function", "doc": "<p>Inizializza un nuovo oggetto Admin.</p>\n\n<p>Args:\n    user_data (dict): Dati dell'utente comuni a tutti gli utenti.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">user_data</span></span>)</span>"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Admin.Admin.isAdmin", "modulename": "BEvent_app.InterfacciaPersistenza.Admin", "qualname": "Admin.isAdmin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Biglietto", "modulename": "BEvent_app.InterfacciaPersistenza.Biglietto", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Biglietto.Biglietto", "modulename": "BEvent_app.InterfacciaPersistenza.Biglietto", "qualname": "Biglietto", "kind": "class", "doc": "<p>Classe che rappresenta un biglietto per un evento.</p>\n\n<p>Args:\n    biglietto_data (dict): Dati del biglietto.</p>\n\n<p>Attributi:\n    id (str): Identificatore univoco del biglietto.\n    evento_associato (str): ID dell'evento associato al biglietto.\n    compratore (str): Nome del compratore del biglietto.\n    data_evento (str): Data dell'evento associato al biglietto.\n    nome_evento (str): Nome dell'evento associato al biglietto.\n    dove (str): Luogo dell'evento associato al biglietto.\n    ora (str): Ora dell'evento associato al biglietto.</p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Biglietto.Biglietto.__init__", "modulename": "BEvent_app.InterfacciaPersistenza.Biglietto", "qualname": "Biglietto.__init__", "kind": "function", "doc": "<p>Inizializza un nuovo oggetto Biglietto.</p>\n\n<p>Args:\n    biglietto_data (dict): Dati del biglietto.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">biglietto_data</span></span>)</span>"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Biglietto.Biglietto.id", "modulename": "BEvent_app.InterfacciaPersistenza.Biglietto", "qualname": "Biglietto.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Biglietto.Biglietto.evento_associato", "modulename": "BEvent_app.InterfacciaPersistenza.Biglietto", "qualname": "Biglietto.evento_associato", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Biglietto.Biglietto.compratore", "modulename": "BEvent_app.InterfacciaPersistenza.Biglietto", "qualname": "Biglietto.compratore", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Biglietto.Biglietto.data_evento", "modulename": "BEvent_app.InterfacciaPersistenza.Biglietto", "qualname": "Biglietto.data_evento", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Biglietto.Biglietto.nome_evento", "modulename": "BEvent_app.InterfacciaPersistenza.Biglietto", "qualname": "Biglietto.nome_evento", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Biglietto.Biglietto.dove", "modulename": "BEvent_app.InterfacciaPersistenza.Biglietto", "qualname": "Biglietto.dove", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Biglietto.Biglietto.ora", "modulename": "BEvent_app.InterfacciaPersistenza.Biglietto", "qualname": "Biglietto.ora", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Biglietto.Biglietto.quantita", "modulename": "BEvent_app.InterfacciaPersistenza.Biglietto", "qualname": "Biglietto.quantita", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Evento", "modulename": "BEvent_app.InterfacciaPersistenza.Evento", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Evento.Evento", "modulename": "BEvent_app.InterfacciaPersistenza.Evento", "qualname": "Evento", "kind": "class", "doc": "<p>Classe che rappresenta un evento osservabile.</p>\n\n<p>Args:\n    evento_data (dict): Dati dell'evento.</p>\n\n<p>Attributi:\n    id (str): Identificatore univoco dell'evento.\n    data (str): Data dell'evento.\n    n_persone (int): Numero di invitati o posti disponibili per l'evento.\n    descrizione (str): Descrizione dell'evento.\n    locandina (Image or None): Locandina dell'evento, convertita da un bytearray.\n    ruolo (str): Ruolo dell'evento.\n    tipo (str): Tipo dell'evento.\n    isPagato (bool): Indica se l'evento \u00e8 stato pagato.\n    fornitori_associati (list): Lista di fornitori associati all'evento.\n    servizi_associati (list): Lista di servizi associati all'evento.</p>\n", "bases": "BEvent_app.Utils.Observable.Observable"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Evento.Evento.__init__", "modulename": "BEvent_app.InterfacciaPersistenza.Evento", "qualname": "Evento.__init__", "kind": "function", "doc": "<p>Inizializza un nuovo oggetto Evento.</p>\n\n<p>Args:\n    evento_data (dict): Dati dell'evento.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">evento_data</span></span>)</span>"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Evento.Evento.id", "modulename": "BEvent_app.InterfacciaPersistenza.Evento", "qualname": "Evento.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Evento.Evento.data", "modulename": "BEvent_app.InterfacciaPersistenza.Evento", "qualname": "Evento.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Evento.Evento.n_persone", "modulename": "BEvent_app.InterfacciaPersistenza.Evento", "qualname": "Evento.n_persone", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Evento.Evento.descrizione", "modulename": "BEvent_app.InterfacciaPersistenza.Evento", "qualname": "Evento.descrizione", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Evento.Evento.ruolo", "modulename": "BEvent_app.InterfacciaPersistenza.Evento", "qualname": "Evento.ruolo", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Evento.Evento.tipo", "modulename": "BEvent_app.InterfacciaPersistenza.Evento", "qualname": "Evento.tipo", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Evento.Evento.isPagato", "modulename": "BEvent_app.InterfacciaPersistenza.Evento", "qualname": "Evento.isPagato", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Evento.Evento.fornitori_associati", "modulename": "BEvent_app.InterfacciaPersistenza.Evento", "qualname": "Evento.fornitori_associati", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Evento.Evento.servizi_associati", "modulename": "BEvent_app.InterfacciaPersistenza.Evento", "qualname": "Evento.servizi_associati", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.EventoPrivato", "modulename": "BEvent_app.InterfacciaPersistenza.EventoPrivato", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.EventoPrivato.EventoPrivato", "modulename": "BEvent_app.InterfacciaPersistenza.EventoPrivato", "qualname": "EventoPrivato", "kind": "class", "doc": "<p>Classe che rappresenta un evento privato, derivata dalla classe base Evento.</p>\n\n<p>Args:\n    evento_data (dict): Dati dell'evento comuni a tutti gli eventi.\n    evento_privato_data (dict): Dati specifici degli eventi privati.</p>\n\n<p>Attributi:\n    festeggiato (str): Nome del festeggiato o festeggiati.\n    prezzo (float): Prezzo dell'evento privato.\n    organizzatore (str): Nome dell'organizzatore dell'evento privato.</p>\n", "bases": "BEvent_app.InterfacciaPersistenza.Evento.Evento"}, {"fullname": "BEvent_app.InterfacciaPersistenza.EventoPrivato.EventoPrivato.__init__", "modulename": "BEvent_app.InterfacciaPersistenza.EventoPrivato", "qualname": "EventoPrivato.__init__", "kind": "function", "doc": "<p>Inizializza un nuovo oggetto EventoPrivato.</p>\n\n<p>Args:\n    evento_data (dict): Dati dell'evento comuni a tutti gli eventi.\n    evento_privato_data (dict): Dati specifici degli eventi privati.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">evento_data</span>, </span><span class=\"param\"><span class=\"n\">evento_privato_data</span></span>)</span>"}, {"fullname": "BEvent_app.InterfacciaPersistenza.EventoPrivato.EventoPrivato.festeggiato", "modulename": "BEvent_app.InterfacciaPersistenza.EventoPrivato", "qualname": "EventoPrivato.festeggiato", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.EventoPrivato.EventoPrivato.prezzo", "modulename": "BEvent_app.InterfacciaPersistenza.EventoPrivato", "qualname": "EventoPrivato.prezzo", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.EventoPrivato.EventoPrivato.organizzatore", "modulename": "BEvent_app.InterfacciaPersistenza.EventoPrivato", "qualname": "EventoPrivato.organizzatore", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.EventoPubblico", "modulename": "BEvent_app.InterfacciaPersistenza.EventoPubblico", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.EventoPubblico.EventoPubblico", "modulename": "BEvent_app.InterfacciaPersistenza.EventoPubblico", "qualname": "EventoPubblico", "kind": "class", "doc": "<p>Classe che rappresenta un evento pubblico, derivata dalla classe base Evento.</p>\n\n<p>Args:\n    evento_data (dict): Dati dell'evento comuni a tutti gli eventi.\n    evento_pubblico_data (dict): Dati specifici degli eventi pubblici.</p>\n\n<p>Attributi:\n    prezzo (float): Prezzo dell'evento pubblico.\n    nome (str): Nome dell'evento pubblico.\n    regione (str): Regione in cui si svolge l'evento pubblico.\n    luogo (str): Luogo dell'evento pubblico.\n    ora (str): Ora in cui si svolge l'evento pubblico.\n    biglietti_disponibili (int): Numero di biglietti disponibili per l'evento pubblico.</p>\n", "bases": "BEvent_app.InterfacciaPersistenza.Evento.Evento"}, {"fullname": "BEvent_app.InterfacciaPersistenza.EventoPubblico.EventoPubblico.__init__", "modulename": "BEvent_app.InterfacciaPersistenza.EventoPubblico", "qualname": "EventoPubblico.__init__", "kind": "function", "doc": "<p>Inizializza un nuovo oggetto EventoPubblico.</p>\n\n<p>Args:\n    evento_data (dict): Dati dell'evento comuni a tutti gli eventi.\n    evento_pubblico_data (dict): Dati specifici degli eventi pubblici.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">evento_data</span>, </span><span class=\"param\"><span class=\"n\">evento_pubblico_data</span></span>)</span>"}, {"fullname": "BEvent_app.InterfacciaPersistenza.EventoPubblico.EventoPubblico.prezzo", "modulename": "BEvent_app.InterfacciaPersistenza.EventoPubblico", "qualname": "EventoPubblico.prezzo", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.EventoPubblico.EventoPubblico.nome", "modulename": "BEvent_app.InterfacciaPersistenza.EventoPubblico", "qualname": "EventoPubblico.nome", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.EventoPubblico.EventoPubblico.regione", "modulename": "BEvent_app.InterfacciaPersistenza.EventoPubblico", "qualname": "EventoPubblico.regione", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.EventoPubblico.EventoPubblico.luogo", "modulename": "BEvent_app.InterfacciaPersistenza.EventoPubblico", "qualname": "EventoPubblico.luogo", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.EventoPubblico.EventoPubblico.ora", "modulename": "BEvent_app.InterfacciaPersistenza.EventoPubblico", "qualname": "EventoPubblico.ora", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.EventoPubblico.EventoPubblico.biglietti_disponibili", "modulename": "BEvent_app.InterfacciaPersistenza.EventoPubblico", "qualname": "EventoPubblico.biglietti_disponibili", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Fornitore", "modulename": "BEvent_app.InterfacciaPersistenza.Fornitore", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Fornitore.Fornitore", "modulename": "BEvent_app.InterfacciaPersistenza.Fornitore", "qualname": "Fornitore", "kind": "class", "doc": "<p>Classe che rappresenta un fornitore, derivata dalle classi base Utente e Observer.</p>\n\n<p>Args:\n    user_data (dict): Dati comuni a tutti gli utenti.\n    fornitore_data (dict): Dati specifici dei fornitori.</p>\n\n<p>Attributes:\n    descrizione (str): Descrizione del fornitore.\n    eventi_max_giornalieri (int): Numero massimo di eventi che il fornitore pu\u00f2 gestire al giorno.\n    orario_lavoro (str): Orario di lavoro del fornitore.\n    foto (list): Elenco di immagini associate al fornitore.\n    citta (str): Citt\u00e0 del fornitore.\n    via (str): Via del fornitore.\n    p_Iva (str): Partita IVA del fornitore.\n    isLocation (bool): Indica se il fornitore \u00e8 una location.</p>\n", "bases": "BEvent_app.InterfacciaPersistenza.Utente.Utente, BEvent_app.Utils.Observer.Observer"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Fornitore.Fornitore.__init__", "modulename": "BEvent_app.InterfacciaPersistenza.Fornitore", "qualname": "Fornitore.__init__", "kind": "function", "doc": "<p>Inizializza un nuovo oggetto Fornitore.</p>\n\n<p>Args:\n    user_data (dict): Dati comuni a tutti gli utenti.\n    fornitore_data (dict): Dati specifici dei fornitori.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">user_data</span>, </span><span class=\"param\"><span class=\"n\">fornitore_data</span></span>)</span>"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Fornitore.Fornitore.descrizione", "modulename": "BEvent_app.InterfacciaPersistenza.Fornitore", "qualname": "Fornitore.descrizione", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Fornitore.Fornitore.eventi_max_giornalieri", "modulename": "BEvent_app.InterfacciaPersistenza.Fornitore", "qualname": "Fornitore.eventi_max_giornalieri", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Fornitore.Fornitore.orario_lavoro", "modulename": "BEvent_app.InterfacciaPersistenza.Fornitore", "qualname": "Fornitore.orario_lavoro", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Fornitore.Fornitore.foto", "modulename": "BEvent_app.InterfacciaPersistenza.Fornitore", "qualname": "Fornitore.foto", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Fornitore.Fornitore.citta", "modulename": "BEvent_app.InterfacciaPersistenza.Fornitore", "qualname": "Fornitore.citta", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Fornitore.Fornitore.via", "modulename": "BEvent_app.InterfacciaPersistenza.Fornitore", "qualname": "Fornitore.via", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Fornitore.Fornitore.p_Iva", "modulename": "BEvent_app.InterfacciaPersistenza.Fornitore", "qualname": "Fornitore.p_Iva", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Fornitore.Fornitore.isLocation", "modulename": "BEvent_app.InterfacciaPersistenza.Fornitore", "qualname": "Fornitore.isLocation", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Fornitore.Fornitore.update", "modulename": "BEvent_app.InterfacciaPersistenza.Fornitore", "qualname": "Fornitore.update", "kind": "function", "doc": "<p>Metodo di callback chiamato quando l'evento osservato \u00e8 stato annullato.</p>\n\n<p>Args:\n    observable (Observable): L'oggetto osservato che ha emesso l'evento di annullamento.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">observable</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Organizzatore", "modulename": "BEvent_app.InterfacciaPersistenza.Organizzatore", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Organizzatore.Organizzatore", "modulename": "BEvent_app.InterfacciaPersistenza.Organizzatore", "qualname": "Organizzatore", "kind": "class", "doc": "<p>Classe che rappresenta un organizzatore, derivata dalla classe base Utente.</p>\n\n<p>Args:\n    user_data (dict): Dati comuni a tutti gli utenti.\n    organizzatore_data (dict): Dati specifici degli organizzatori.</p>\n\n<p>Attributi:\n    citta (str): Citt\u00e0 di residenza dell'organizzatore.</p>\n", "bases": "BEvent_app.InterfacciaPersistenza.Utente.Utente"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Organizzatore.Organizzatore.__init__", "modulename": "BEvent_app.InterfacciaPersistenza.Organizzatore", "qualname": "Organizzatore.__init__", "kind": "function", "doc": "<p>Inizializza un nuovo oggetto Organizzatore.</p>\n\n<p>Args:\n    user_data (dict): Dati comuni a tutti gli utenti.\n    organizzatore_data (dict): Dati specifici degli organizzatori.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">user_data</span>, </span><span class=\"param\"><span class=\"n\">organizzatore_data</span></span>)</span>"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Organizzatore.Organizzatore.citta", "modulename": "BEvent_app.InterfacciaPersistenza.Organizzatore", "qualname": "Organizzatore.citta", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Recensione", "modulename": "BEvent_app.InterfacciaPersistenza.Recensione", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Recensione.Recensione", "modulename": "BEvent_app.InterfacciaPersistenza.Recensione", "qualname": "Recensione", "kind": "class", "doc": "<p>Classe che rappresenta una recensione.</p>\n\n<p>Args:\n    recensione_data (dict): Dati della recensione.</p>\n\n<p>Attributes:\n    id (str): Identificatore univoco della recensione.\n    voto (int): Voto assegnato nella recensione.\n    descrizione (str): Descrizione della recensione.\n    valutante (str): ID dell'utente che ha scritto la recensione.\n    valutato (str): ID dell'utente o servizio valutato.\n    nome_utente_valutante (str): Nome utente dell'utente che ha scritto la recensione.\n    servizio (str): Tipo di servizio valutato.\n    titolo (str): Titolo della recensione.</p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Recensione.Recensione.__init__", "modulename": "BEvent_app.InterfacciaPersistenza.Recensione", "qualname": "Recensione.__init__", "kind": "function", "doc": "<p>Inizializza un nuovo oggetto Recensione.</p>\n\n<p>Args:\n    recensione_data (dict): Dati della recensione.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">recensione_data</span></span>)</span>"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Recensione.Recensione.id", "modulename": "BEvent_app.InterfacciaPersistenza.Recensione", "qualname": "Recensione.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Recensione.Recensione.voto", "modulename": "BEvent_app.InterfacciaPersistenza.Recensione", "qualname": "Recensione.voto", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Recensione.Recensione.descrizione", "modulename": "BEvent_app.InterfacciaPersistenza.Recensione", "qualname": "Recensione.descrizione", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Recensione.Recensione.valutante", "modulename": "BEvent_app.InterfacciaPersistenza.Recensione", "qualname": "Recensione.valutante", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Recensione.Recensione.valutato", "modulename": "BEvent_app.InterfacciaPersistenza.Recensione", "qualname": "Recensione.valutato", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Recensione.Recensione.nome_utente_valutante", "modulename": "BEvent_app.InterfacciaPersistenza.Recensione", "qualname": "Recensione.nome_utente_valutante", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Recensione.Recensione.servizio", "modulename": "BEvent_app.InterfacciaPersistenza.Recensione", "qualname": "Recensione.servizio", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Recensione.Recensione.titolo", "modulename": "BEvent_app.InterfacciaPersistenza.Recensione", "qualname": "Recensione.titolo", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.ServizioOfferto", "modulename": "BEvent_app.InterfacciaPersistenza.ServizioOfferto", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.ServizioOfferto.ServizioOfferto", "modulename": "BEvent_app.InterfacciaPersistenza.ServizioOfferto", "qualname": "ServizioOfferto", "kind": "class", "doc": "<p>Classe che rappresenta un servizio offerto.</p>\n\n<p>Args:\n    service_data (dict): Dati del servizio offerto.</p>\n\n<p>Attributes:\n    _id (str): Identificatore univoco del servizio.\n    descrizione (str): Descrizione del servizio.\n    tipo (str): Tipo del servizio.\n    prezzo (float): Prezzo del servizio.\n    foto_servizio (list): Elenco di immagini associate al servizio.\n    isCurrentVersion (bool): Indica se il servizio \u00e8 la versione corrente.\n    isDeleted (bool): Indica se il servizio \u00e8 stato eliminato.\n    fornitore_associato (str): ID del fornitore associato al servizio.</p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.ServizioOfferto.ServizioOfferto.__init__", "modulename": "BEvent_app.InterfacciaPersistenza.ServizioOfferto", "qualname": "ServizioOfferto.__init__", "kind": "function", "doc": "<p>Inizializza un nuovo oggetto ServizioOfferto.</p>\n\n<p>Args:\n    service_data (dict): Dati del servizio offerto.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">service_data</span></span>)</span>"}, {"fullname": "BEvent_app.InterfacciaPersistenza.ServizioOfferto.ServizioOfferto.descrizione", "modulename": "BEvent_app.InterfacciaPersistenza.ServizioOfferto", "qualname": "ServizioOfferto.descrizione", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.ServizioOfferto.ServizioOfferto.tipo", "modulename": "BEvent_app.InterfacciaPersistenza.ServizioOfferto", "qualname": "ServizioOfferto.tipo", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.ServizioOfferto.ServizioOfferto.prezzo", "modulename": "BEvent_app.InterfacciaPersistenza.ServizioOfferto", "qualname": "ServizioOfferto.prezzo", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.ServizioOfferto.ServizioOfferto.foto_servizio", "modulename": "BEvent_app.InterfacciaPersistenza.ServizioOfferto", "qualname": "ServizioOfferto.foto_servizio", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.ServizioOfferto.ServizioOfferto.isCurrentVersion", "modulename": "BEvent_app.InterfacciaPersistenza.ServizioOfferto", "qualname": "ServizioOfferto.isCurrentVersion", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.ServizioOfferto.ServizioOfferto.isDeleted", "modulename": "BEvent_app.InterfacciaPersistenza.ServizioOfferto", "qualname": "ServizioOfferto.isDeleted", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.ServizioOfferto.ServizioOfferto.fornitore_associato", "modulename": "BEvent_app.InterfacciaPersistenza.ServizioOfferto", "qualname": "ServizioOfferto.fornitore_associato", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Utente", "modulename": "BEvent_app.InterfacciaPersistenza.Utente", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Utente.Utente", "modulename": "BEvent_app.InterfacciaPersistenza.Utente", "qualname": "Utente", "kind": "class", "doc": "<p>Classe che rappresenta un utente.</p>\n\n<p>Args:\n    user_data (dict): Dati dell'utente.</p>\n\n<p>Attributi:\n    id (str): Identificatore univoco dell'utente.\n    nome (str): Nome dell'utente.\n    cognome (str): Cognome dell'utente.\n    data_nascita (str): Data di nascita dell'utente.\n    email (str): Indirizzo email dell'utente.\n    telefono (str): Numero di telefono dell'utente.\n    nome_utente (str): Nome utente dell'utente.\n    password_hash (str): Hash della password dell'utente.\n    ruolo (str): Ruolo dell'utente.\n    regione (str): Regione di residenza dell'utente.\n    isAdmin (bool): Indica se l'utente ha privilegi di amministratore.</p>\n", "bases": "flask_login.mixins.UserMixin"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Utente.Utente.__init__", "modulename": "BEvent_app.InterfacciaPersistenza.Utente", "qualname": "Utente.__init__", "kind": "function", "doc": "<p>Inizializza un nuovo oggetto Utente.</p>\n\n<p>Args:\n    user_data (dict): Dati dell'utente.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">user_data</span></span>)</span>"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Utente.Utente.id", "modulename": "BEvent_app.InterfacciaPersistenza.Utente", "qualname": "Utente.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Utente.Utente.nome", "modulename": "BEvent_app.InterfacciaPersistenza.Utente", "qualname": "Utente.nome", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Utente.Utente.cognome", "modulename": "BEvent_app.InterfacciaPersistenza.Utente", "qualname": "Utente.cognome", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Utente.Utente.data_nascita", "modulename": "BEvent_app.InterfacciaPersistenza.Utente", "qualname": "Utente.data_nascita", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Utente.Utente.email", "modulename": "BEvent_app.InterfacciaPersistenza.Utente", "qualname": "Utente.email", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Utente.Utente.telefono", "modulename": "BEvent_app.InterfacciaPersistenza.Utente", "qualname": "Utente.telefono", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Utente.Utente.nome_utente", "modulename": "BEvent_app.InterfacciaPersistenza.Utente", "qualname": "Utente.nome_utente", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Utente.Utente.password_hash", "modulename": "BEvent_app.InterfacciaPersistenza.Utente", "qualname": "Utente.password_hash", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Utente.Utente.ruolo", "modulename": "BEvent_app.InterfacciaPersistenza.Utente", "qualname": "Utente.ruolo", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Utente.Utente.regione", "modulename": "BEvent_app.InterfacciaPersistenza.Utente", "qualname": "Utente.regione", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Utente.Utente.isAdmin", "modulename": "BEvent_app.InterfacciaPersistenza.Utente", "qualname": "Utente.isAdmin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Utente.Utente.get_id", "modulename": "BEvent_app.InterfacciaPersistenza.Utente", "qualname": "Utente.get_id", "kind": "function", "doc": "<p>Restituisce l'identificatore univoco dell'utente.</p>\n\n<p>Returns:\n    str: Identificatore univoco dell'utente.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.InterfacciaPersistenza.Utente.Utente.check_password", "modulename": "BEvent_app.InterfacciaPersistenza.Utente", "qualname": "Utente.check_password", "kind": "function", "doc": "<p>Verifica se la password fornita corrisponde alla password dell'utente.</p>\n\n<p>Args:\n    password (str): Password da verificare.</p>\n\n<p>Returns:\n    bool: True se la password \u00e8 corretta, False altrimenti.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">password</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.RicercaEvento", "modulename": "BEvent_app.RicercaEvento", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.RicercaEvento.RicercaEventoController", "modulename": "BEvent_app.RicercaEvento.RicercaEventoController", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.RicercaEvento.RicercaEventoController.re", "modulename": "BEvent_app.RicercaEvento.RicercaEventoController", "qualname": "re", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;re&#x27;&gt;"}, {"fullname": "BEvent_app.RicercaEvento.RicercaEventoController.visualizza_eventi", "modulename": "BEvent_app.RicercaEvento.RicercaEventoController", "qualname": "visualizza_eventi", "kind": "function", "doc": "<p>Serve a visualizzare la pagina di ricerca degli eventi pubblici. Prende gli eventi pubblici e li restituisce come\nrisposa nella pagina</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>ricercaeventi.html, con la lista di oggetti di tipo evento pubblico passata come parametro</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.RicercaEvento.RicercaEventoController.filtro_barra_ricerca", "modulename": "BEvent_app.RicercaEvento.RicercaEventoController", "qualname": "filtro_barra_ricerca", "kind": "function", "doc": "<p>Serve  a elaborare una richiesta in Ajax e in base ad una parola passata come parametro restituisce la lista degli\neventi che contengono tale parola.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Risposta in formato JSON che contiene una lista di oggetti: eventi_filtrati(di tipo Evento Pubblico)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.RicercaEvento.RicercaEventoController.filtro_categorie_eventi", "modulename": "BEvent_app.RicercaEvento.RicercaEventoController", "qualname": "filtro_categorie_eventi", "kind": "function", "doc": "<p>Serve  a elaborare una richiesta in Ajax e in base alla categoria passata come parametro restituisce la lista degli\neventi che appartengono a quel tipo</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>risposta in formato JSON che continene una lista di eventi filtrati: eventi_filtrati(lista di oggetti di\n  tipo evento Pubblico)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.RicercaEvento.RicercaEventoController.filtro_regione_eventi", "modulename": "BEvent_app.RicercaEvento.RicercaEventoController", "qualname": "filtro_regione_eventi", "kind": "function", "doc": "<p>Serve  a elaborare una richiesta in Ajax e in base alla regione passata come parametro restituisce la lista degli\neventi che si trovano in quella regione</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Risposta in formato JSON che continene una lista di oggetti: eventi_filtrati (di tipo Evento Pubblico)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.RicercaEvento.RicercaEventoController.filtro_prezzo_eventi", "modulename": "BEvent_app.RicercaEvento.RicercaEventoController", "qualname": "filtro_prezzo_eventi", "kind": "function", "doc": "<p>Serve  a elaborare una richiesta in Ajax e in base a un prezzo minimo e un prezzo massimo passati come parametri\nrestituisce la lista dei eventi che hanno un prezzo compreso nel range</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Risposta in formato JSON che continene una lista di oggetti: eventi_filtrati(di tipo Evento Pubblico)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.RicercaEvento.RicercaEventoController.aggiorna_right_column_eventi", "modulename": "BEvent_app.RicercaEvento.RicercaEventoController", "qualname": "aggiorna_right_column_eventi", "kind": "function", "doc": "<p>Serve a elaborare una richiesta Ajax e in base all'id dell'evento passato come parametro restituisce il singolo\nevento che corrisponde all'id</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Risposta in formato JSON che continene un oggetto: evento (oggetto di tipo Evento Pubblico)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.RicercaEvento.RicercaEventoService", "modulename": "BEvent_app.RicercaEvento.RicercaEventoService", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.RicercaEvento.RicercaEventoService.get_eventi", "modulename": "BEvent_app.RicercaEvento.RicercaEventoService", "qualname": "get_eventi", "kind": "function", "doc": "<p>Funzione che recupera dal database i documenti della collezione evento. Una volta recuperati li filtra in modo che\nla loro data sia maggiore della data odierna, che il ruolo sia 1 cos\u00ec che siano eventi pubblici e controllando che\nil numero si biglietti disponibili non sia zero.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>lista_eventi (lista di oggetti di tipo Evento Pubblico)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.RicercaEvento.RicercaEventoService.get_eventi_sponsorizzati", "modulename": "BEvent_app.RicercaEvento.RicercaEventoService", "qualname": "get_eventi_sponsorizzati", "kind": "function", "doc": "<p>Ottiene una lista di eventi sponsorizzati che soddisfano determinati criteri.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>List[EventoPubblico]\n      Una lista di oggetti EventoPubblico rappresentanti gli eventi sponsorizzati.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.RicercaEvento.RicercaEventoService.serializza_eventi", "modulename": "BEvent_app.RicercaEvento.RicercaEventoService", "qualname": "serializza_eventi", "kind": "function", "doc": "<p>Funzione per serializzare un oggetto della classe fornitore in modo che sia passabile come risposta json.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>evento</strong>:  (obj) oggetto della classe Evento Pubblico che contiene i dati dell'evento scelto</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>dizionario che rappresenta i dati dell'oggetto evento pubblico</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">evento</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.RicercaEvento.RicercaEventoService.serializza_eventi_column", "modulename": "BEvent_app.RicercaEvento.RicercaEventoService", "qualname": "serializza_eventi_column", "kind": "function", "doc": "<p>Serializza un oggetto evento in un formato adatto per l'inserimento in una colonna.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>evento</strong>:  Oggetto evento\nL'oggetto evento da serializzare.</p></li>\n<li><p><strong>nome_utente</strong>:  str\nIl nome utente associato all'evento.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>dict\n      Un dizionario contenente i dettagli serializzati dell'evento.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">evento</span>, </span><span class=\"param\"><span class=\"n\">nome_utente</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.RicercaEvento.RicercaEventoService.ricerca_eventi_per_parola", "modulename": "BEvent_app.RicercaEvento.RicercaEventoService", "qualname": "ricerca_eventi_per_parola", "kind": "function", "doc": "<p>Funzione per ottenere dal database la lista eventi pubblici la cui descrizione o nome contiene la parola inserita\ndall'organizzatore.\n-Viene presa la lista di eventi successivi alla data odierna.\n-Vengono filtrati gli eventi cercando la parola sia nel nome che nella descrizione, creando la lista di eventi da\nrestituire</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ricerca</strong>:  (str) stringa che indica la parola da ricercare</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>una lista filtrata di oggetti: eventi_filtrati (lista di oggetti di tipo Evento Pubblico)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ricerca</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.RicercaEvento.RicercaEventoService.ricerca_eventi_per_categoria", "modulename": "BEvent_app.RicercaEvento.RicercaEventoService", "qualname": "ricerca_eventi_per_categoria", "kind": "function", "doc": "<p>Funzione per ottenere dal database la lista di eventi che appartengono alla categoria inserita dall'utente.\n-Viene presa la lista di tutti gli eventi successivi alla data odierna.\n-La lista degli eventi viene filtrata per prendere gli eventi che hanno il parametro \"tipo\" che corrisponde\nalla categoria indicata.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>categoria</strong>:  (str) stringa che indica la categoria di eventi che si vuole filtrare</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>una lista filtrata di oggetti: eventi_filtrati (lista di oggetti di tipo Evento Pubblico)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">categoria</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.RicercaEvento.RicercaEventoService.ricerca_eventi_per_regione", "modulename": "BEvent_app.RicercaEvento.RicercaEventoService", "qualname": "ricerca_eventi_per_regione", "kind": "function", "doc": "<p>Funzione per ottenere dal database la lista di eventi che si trovano nella regione inserita dall' organizzatore.\n-Viene presa la lista di tutti gli eventi successivi alla data odierna.\n-La lista degli eventi viene filtrata per prendere gli eventi che hanno il parametro \"regione\" che corrisponde alla\nregione indicata.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>regione</strong>:  (str) stringa che indica la regione a cui devono appartenere gli eventi</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>una lista filtrata di oggetti: eventi_filtrati (lista di oggetti di tipo Evento Pubblico)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">regione</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.RicercaEvento.RicercaEventoService.ricerca_eventi_per_prezzo", "modulename": "BEvent_app.RicercaEvento.RicercaEventoService", "qualname": "ricerca_eventi_per_prezzo", "kind": "function", "doc": "<p>Funzione per ottenere dal database la lista eventi il cui prezzo si trova nel range di prezzo\ninserito dall'organizzatore.\n-Viene presa la lista di tutti gli eventi successivi alla data odierna.\n-La lista degli eventi viene filtrata per prendere gli eventi che rientrano nel range di prezzi indicati dall'\norganizzatore.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>prezzo_min</strong>:  (str) stringa che indica il prezzo minimo del range di prezzo scelto dall'organizzatore</li>\n<li><strong>prezzo_max</strong>:  (str) stringa che indica il prezzo massimo del range di prezzo scelto dall'organizzatore</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>una lista filtrata di oggetti: eventi_filtrati (lista di oggetti di tipo Evento Pubblico)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">prezzo_min</span>, </span><span class=\"param\"><span class=\"n\">prezzo_max</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.RicercaEvento.RicercaEventoService.get_evento_by_id", "modulename": "BEvent_app.RicercaEvento.RicercaEventoService", "qualname": "get_evento_by_id", "kind": "function", "doc": "<p>Funzione che ottiene dal database le informazioni dell'evento scelto, grazie all'id passato come parametro</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id_evento</strong>:  (str) stringa che rappresenta l'id dell'evento che si vuole ottenere</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>oggetto evento di tipo EventoPubblico</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">id_evento</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Routes", "modulename": "BEvent_app.Routes", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.Routes.views", "modulename": "BEvent_app.Routes", "qualname": "views", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;views&#x27;&gt;"}, {"fullname": "BEvent_app.Routes.fornitore_page", "modulename": "BEvent_app.Routes", "qualname": "fornitore_page", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">servizi</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">dati</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">eventi_pubblici</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">eventi_privati</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Routes.organizzatore_page", "modulename": "BEvent_app.Routes", "qualname": "organizzatore_page", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">evento_privato</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">eventi_pubblici</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Routes.area_organizzatore_page", "modulename": "BEvent_app.Routes", "qualname": "area_organizzatore_page", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">organizzatore</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">eventi_privati</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">biglietti_comprati</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Routes.home", "modulename": "BEvent_app.Routes", "qualname": "home", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Routes.registrazione_page", "modulename": "BEvent_app.Routes", "qualname": "registrazione_page", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Routes.registrazione_organizzatore_page", "modulename": "BEvent_app.Routes", "qualname": "registrazione_organizzatore_page", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Routes.scelta_evento_da_creare_page", "modulename": "BEvent_app.Routes", "qualname": "scelta_evento_da_creare_page", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Routes.sceltafornitori_page", "modulename": "BEvent_app.Routes", "qualname": "sceltafornitori_page", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fornitori</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">servizi</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">recensioni</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Routes.ricerca_eventi_page", "modulename": "BEvent_app.Routes", "qualname": "ricerca_eventi_page", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">eventi</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">eventi_sponsorizzati</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Routes.riepilogo_scelte_page", "modulename": "BEvent_app.Routes", "qualname": "riepilogo_scelte_page", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fornitori</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">servizi</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Routes.crea_evento_pubblico_page", "modulename": "BEvent_app.Routes", "qualname": "crea_evento_pubblico_page", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">servizi</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">eventi_pubblici</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Routes.visualizza_evento_dettagli_page", "modulename": "BEvent_app.Routes", "qualname": "visualizza_evento_dettagli_page", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">evento</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">organizzatore</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">servizi</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Routes.visualizza_evento_dettagli_organizzatore_page", "modulename": "BEvent_app.Routes", "qualname": "visualizza_evento_dettagli_organizzatore_page", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">evento</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">organizzatore</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">servizi</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Utils", "modulename": "BEvent_app.Utils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.Utils.Image", "modulename": "BEvent_app.Utils.Image", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.Utils.Image.convert_image_to_byte_array", "modulename": "BEvent_app.Utils.Image", "qualname": "convert_image_to_byte_array", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">image_content</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Utils.Image.convert_byte_array_to_image", "modulename": "BEvent_app.Utils.Image", "qualname": "convert_byte_array_to_image", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">byte_array</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Utils.Observable", "modulename": "BEvent_app.Utils.Observable", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.Utils.Observable.Observable", "modulename": "BEvent_app.Utils.Observable", "qualname": "Observable", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.Utils.Observable.Observable.__init__", "modulename": "BEvent_app.Utils.Observable", "qualname": "Observable.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">observers</span></span>)</span>"}, {"fullname": "BEvent_app.Utils.Observable.Observable.observers", "modulename": "BEvent_app.Utils.Observable", "qualname": "Observable.observers", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.Utils.Observable.Observable.register_observer", "modulename": "BEvent_app.Utils.Observable", "qualname": "Observable.register_observer", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">observer</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Utils.Observable.Observable.remove_observer", "modulename": "BEvent_app.Utils.Observable", "qualname": "Observable.remove_observer", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">observer</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Utils.Observable.Observable.notify_observers", "modulename": "BEvent_app.Utils.Observable", "qualname": "Observable.notify_observers", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.Utils.Observer", "modulename": "BEvent_app.Utils.Observer", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.Utils.Observer.Observer", "modulename": "BEvent_app.Utils.Observer", "qualname": "Observer", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "abc.ABC"}, {"fullname": "BEvent_app.Utils.Observer.Observer.update", "modulename": "BEvent_app.Utils.Observer", "qualname": "Observer.update", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">observable</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "BEvent_app.db", "modulename": "BEvent_app.db", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "BEvent_app.db.get_db", "modulename": "BEvent_app.db", "qualname": "get_db", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();